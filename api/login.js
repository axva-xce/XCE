import bcrypt from 'bcrypt'; import jwt from 'jsonwebtoken'; import { readAccount } from './db'; export default async function handler(req, res) { if (req.method !== 'POST') { return res.status(405).end() } let username, password; try { const body = typeof req.body === 'string' ? JSON.parse(req.body) : req.body; username = body.username; password = body.password } catch (e) { return res.status(400).json({ error: 'Invalid JSON' }) } if (!username || !password) { return res.status(400).json({ error: 'Username and password required' }) } const acct = await readAccount(username); if (!acct || !(await bcrypt.compare(password, acct.passwordHash))) { return res.status(401).json({ error: 'Invalid credentials' }) } const token = jwt.sign({ username: acct.username }, process.env.JWT_SECRET, { expiresIn: '1h' }); res.json({ token }) }